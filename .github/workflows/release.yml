name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
    branches:
      - main
      - master

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    name: Release to PyPI
    environment: pypi
    runs-on: ubuntu-latest
    # Only run if the build workflow succeeded and was triggered by a tag
    if: ${{ github.event.workflow_run.conclusion == 'success' && startsWith(github.event.workflow_run.head_branch, 'v') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  update-benchmark:
    name: Update benchmark image
    runs-on: ubuntu-latest
    needs: [release]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          pattern: wheels-linux-x86_64
      - name: Install dependencies
        run: |
          pip install -r benchmark/requirements.txt
          pip install httpr --no-index --find-links wheels-linux-x86_64/ --force-reinstall
      - name: Start Uvicorn server
        run: |
          uvicorn benchmark.server:app --host 0.0.0.0 --port 8000 &
          sleep 10
      - name: Run benchmark and generate image
        run: |
          python benchmark/benchmark.py
          python benchmark/generate_image.py
      - name: Commit benchmark image
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add *.jpg
          if ! git diff --quiet --cached; then
            git commit -m "Update benchmark image for ${{ github.event.workflow_run.head_branch }}"
            git push
          else
            echo "No changes to commit"
          fi
