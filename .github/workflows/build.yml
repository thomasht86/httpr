name: Build

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
            manylinux: auto
          - runner: ubuntu-22.04
            target: x86
            manylinux: auto
          - runner: ubuntu-22.04
            target: aarch64
            manylinux: manylinux_2_28
          - runner: ubuntu-22.04
            target: armv7
            manylinux: manylinux_2_28
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      # Only modify pyproject.toml temporarily for this job if running from a tag
      - name: Update version in pyproject.toml
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          pip install toml
          python .github/workflows/set_version.py $TAG_VERSION
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: false
          manylinux: ${{ matrix.platform.manylinux }}
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: false
          manylinux: ${{ matrix.platform.manylinux }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      # Only modify pyproject.toml temporarily for this job if running from a tag
      - name: Update version in pyproject.toml
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          pip install toml
          python .github/workflows/set_version.py $TAG_VERSION
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: false
          manylinux: musllinux_1_2
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: false
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          architecture: ${{ matrix.platform.target }}
      # Only modify pyproject.toml temporarily for this job if running from a tag
      - name: Update version in pyproject.toml
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        shell: pwsh
        run: |
          $TAG_VERSION = $env:GITHUB_REF -replace 'refs/tags/v', ''
          pip install toml
          python .github/workflows/set_version.py $TAG_VERSION
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: false
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: false
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      # Only modify pyproject.toml temporarily for this job if running from a tag
      - name: Update version in pyproject.toml
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          pip install toml
          python .github/workflows/set_version.py $TAG_VERSION
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: false
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: false
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      # Only modify pyproject.toml temporarily for this job if running from a tag
      - name: Update version in pyproject.toml
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          pip install toml
          python .github/workflows/set_version.py $TAG_VERSION
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    environment: pypi
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "wheels-*/*"
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  benchmark:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86_64
      - name: Install dependencies
        run: |
          pip install -r benchmark/requirements.txt
          pip install httpr --no-index --find-links ./ --force-reinstall
      - name: Start Uvicorn server
        run: |
          uvicorn benchmark.server:app --host 0.0.0.0 --port 8000 &
          sleep 10
      - name: Run benchmark
        run: python benchmark/benchmark.py
      - name: Generate and commit benchmark image
        run: |
          python benchmark/generate_image.py
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add benchmark.jpg
          if ! git diff --quiet --cached; then
            git commit -m "Update benchmark image for ${{ github.ref_name }}"
            git push
          else
            echo "No changes to commit"
          fi
